
            FILE * fd;                           // File pointer
            int size;
            bool exists;

            fd = fopen("/tmp/server.log", "r");
            if(fd == NULL) {
                perror("fopen, Error opening file");
                return EXIT_FAILURE;
            }


            if (NULL != fd) {
                fseek (fd, 0, SEEK_END);
                size = ftell(fd);
                fclose(fd);

                if (0 == size) {
                    printf("Server is not active, exiting.\n");
                    fprintf(fp ,"Server is not active, exiting.\n");
                    exit(1);
                }
                else
                 exists = true;
            }


    if (exists){
            static const long max_len = 55+ 1;  // define the max length of the line to read
            char buff[max_len + 1];             // define the buffer and allocate the length


              fseek(fd, -max_len, SEEK_END);            // set pointer to the end of file minus the length you need. Presumably there can be more than one new line caracter
              fread(buff, max_len-1, 1, fd);            // read the contents of the file starting from where fseek() positioned us
              fclose(fd);                               // close the file

              buff[max_len-1] = '\0';                   // close the string
              char *last_newline = strrchr(buff, '\n'); // find last occurrence of newlinw
              char *last_line = last_newline+1;         // jump to it

            if(strcmp(last_line, "Shared Memory Area created") == 0){
                serverReady =true;
            }
            else
            printf("Server is not ready, exiting.\n");
            fprintf(fp ,"Server is not ready, exiting.\n");
            exit(1);
            }



